전역변수
	int score
	directionX = {-1, 1, 0, 0}
	directionY = {0, 0, -1, 1}
				  상 하 좌 우
	
	int[][] ballDirection = {상, 하, 좌, 우}
	
	int[] currentDirection
	
	int currentX, currentY

main():
	변수
		List<Integer[]> possibelStartPos
		List<Integer[]> 웜홀6, 웜홀7, 웜홀8, 웜홀9, 웜홀10
		int[] 블랙홀
	입력
		int T		
		for tc from 1 to T
			int N
			int[N+1][N+1] board
		for r from 1 to N-1
			for c from 1 to N-1
				board[r][c]
				// 가능한 시작 위치 체크
				if board[r][c] == 0
					possibleStartPos.add({r,c})
				// 웜홀 체크
				if board[r][c] == 6
					웜홀6.add({r,c})
				...
	
	int ans = 0;
	
	for startPos of possibleStartPos
		int temp = 핀볼게임(startPos[0], startPos[1])
		max = max of max and temp	
		
	print ans

	
핀볼게임(int startX, int startY):
	int max
	
	for startDirection from 0 to 3
		currentDirection = ballDirection[startDirection]
		
		do
			currentX += currentDirection[0]
			currentY += currentDirection[1]
			
			switch board[currentX][currentY]
			case 1
				블록1
				break
			case 2
				블록2
				break
			case 3
				블록3
				break
			case 4
				블록4
				break
			case 5
				블록5
				break
			case 6
				웜홀6
				break
			case 7
				웜홀7
				break
			case 8
				웜홀8
				break
			case 9
				웜홀9
				break
			case 10
				웜홀10
				
			if (currentX == 0)
				벽x0
			else if (currentX == N)
				벽xN
			else if (currentY == 0)
				벽y0
			else if (currentX == N)
				벽yN
			
		while (board[currentX][currentY] != -1 && board[currentX][currentY] != board[startX][startY])
		max = max of max and score
	
	return max
		
		

블록1(currentDirection):
	if currentDirection is 상 change currentDirection to 하
	else if currentDirection is 하 change currentDirection to 우
	else if currentDirection is 좌 change currentDirection to 상
	else if currentDirection is 우 change currentDirection to 좌
	
	score++

블록2 ~ 블록 5(currentDirection)

=> 파라미터 설정해서 하나로 묶기

벽x0():
	change currentDirection to 우
	score++

벽xN, 벽y0, 벽yN()

웜홀6(int currentX, int currentY):
	if currentX == 웜홀6.get(0)[0] and currentY == 웜홀6.get(0)[1]
		currentX =  웜홀6.get(1)[0]
		currentY == 웜홀6.get(1)[1]
		
	else if currentX == 웜홀6.get(1)[0] and currentY == 웜홀6.get(1)[1]
		currentX =  웜홀6.get(0)[0]
		currentY == 웜홀6.get(0)[1]

웜홀7 ~ 웜홀10

블랙홀():
	print score
		
		