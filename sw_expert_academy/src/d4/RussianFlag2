int[][] flag
int N, M

main():
	입력 
		row = N
		col = M
		
	flag = int[N][M]
	
	// 첫 줄 W 처리
	int temp = 0
	
	for i from 0 to M-1
		if flag[0][i] W
			temp++
			 
	cnt[0] = M - temp 
	
	// 마지막 줄 R 처리
	temp = 0
	
	
	
int colorLine(int lineIdx, int statIdx, char currentColor):
	if lineIdx = 0 or N-1
		return 0;
		
	else if lineIdx == startIdx
		// 첫 번째 실행 때 현재 줄을 파란색으로 칠하기
		int temp = 0
		for m from 0 to M-1
			if int[lineIdx][m] is B
				temp++
				
		temp = M - temp
		
		// 이전 줄을 하얀색 또는 파란색으로 칠하기
		temp += colorLine(lineIdx-1, startIdx, currentColor)
		
		// 다음 줄을 파란색 또는 빨간색으로 칠하기
		temp += colorLine(lineIdx+1, startIdx, currentColor)	
		
		return temp
		
	else if lineIdx < startIdx
		// 앞선 실행보다 위로 왔을 때
		if currentColor is 'B'
			
			int temp1 = 0
			for m from 0 to M-1
			if int[lineIdx][m] is B
				temp1++
				
			temp1 = M - temp1
			
			temp1 += colorLine(lineIdx-1, startIdx, 'B')
			
			int temp2 = 0
			for m from 0 to M-1
			if int[lineIdx][m] is W
				temp2++
				
			temp2 = M - temp2
			
			temp2 += colorLine(lineIdx-1, startIdx, 'W')
			
			return (temp1 < temp2)? temp1 : temp2			
		
		else if currentColor is 'W'
			int temp = 0
			for m from 0 to M-1
			if int[lineIdx][m] is W
				temp++
				
			temp = M - temp
			temp += colorLine(lineIdx-1, startIdx, 'W')

			return temp
						
	else if lineIdx > startIdx
		// 앞선 실행보다 아래로 왔을 때
		if currentColor is 'B'
			
			int temp1 = 0
			for m from 0 to M-1
			if int[lineIdx][m] is B
				temp1++
				
			temp1 = M - temp1
			
			temp1 += colorLine(lineIdx+1, startIdx, 'B')
			
			int temp2 = 0
			for m from 0 to M-1
			if int[lineIdx][m] is R
				temp2++
				
			temp2 = M - temp2
			
			temp2 += colorLine(lineIdx+1, startIdx, 'R')
			
			return (temp1 < temp2)? temp1 : temp2			
		
		else if currentColor is 'R'
			int temp = 0
			for m from 0 to M-1
			if int[lineIdx][m] is R
				temp++
				
			temp = M - temp
			temp += colorLine(lineIdx+1, startIdx, 'R')

			return temp
		
		